|PS2_keyboard
CLOCK2_50 => ~NO_FANOUT~
CLOCK3_50 => ~NO_FANOUT~
CLOCK4_50 => ~NO_FANOUT~
CLOCK_50 => keyboard:keyboard1.clk
CLOCK_50 => caps_state.CLK
CLOCK_50 => ctrl_state.CLK
CLOCK_50 => e_out.CLK
CLOCK_50 => shift_state.CLK
CLOCK_50 => cnt[0].CLK
CLOCK_50 => cnt[1].CLK
CLOCK_50 => cnt[2].CLK
CLOCK_50 => cnt[3].CLK
CLOCK_50 => cnt[4].CLK
CLOCK_50 => cnt[5].CLK
CLOCK_50 => cnt[6].CLK
CLOCK_50 => cnt[7].CLK
CLOCK_50 => release_flag.CLK
CLOCK_50 => next_data_n.CLK
CLOCK_50 => temp[0].CLK
CLOCK_50 => temp[1].CLK
CLOCK_50 => temp[2].CLK
CLOCK_50 => temp[3].CLK
CLOCK_50 => temp[4].CLK
CLOCK_50 => temp[5].CLK
CLOCK_50 => temp[6].CLK
CLOCK_50 => temp[7].CLK
KEY[0] => ~NO_FANOUT~
KEY[1] => ~NO_FANOUT~
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
SW[0] => keyboard:keyboard1.clrn
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
LEDR[0] << keyboard:keyboard1.overflow
LEDR[1] << <GND>
LEDR[2] << <GND>
LEDR[3] << <GND>
LEDR[4] << <GND>
LEDR[5] << e_out.DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] << <GND>
LEDR[7] << ctrl_state.DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] << shift_state.DB_MAX_OUTPUT_PORT_TYPE
LEDR[9] << caps_state.DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] << hex15:h0.port1
HEX0[1] << hex15:h0.port1
HEX0[2] << hex15:h0.port1
HEX0[3] << hex15:h0.port1
HEX0[4] << hex15:h0.port1
HEX0[5] << hex15:h0.port1
HEX0[6] << hex15:h0.port1
HEX1[0] << hex15:h1.port1
HEX1[1] << hex15:h1.port1
HEX1[2] << hex15:h1.port1
HEX1[3] << hex15:h1.port1
HEX1[4] << hex15:h1.port1
HEX1[5] << hex15:h1.port1
HEX1[6] << hex15:h1.port1
HEX2[0] << hex15:h2.port1
HEX2[1] << hex15:h2.port1
HEX2[2] << hex15:h2.port1
HEX2[3] << hex15:h2.port1
HEX2[4] << hex15:h2.port1
HEX2[5] << hex15:h2.port1
HEX2[6] << hex15:h2.port1
HEX3[0] << hex15:h3.port1
HEX3[1] << hex15:h3.port1
HEX3[2] << hex15:h3.port1
HEX3[3] << hex15:h3.port1
HEX3[4] << hex15:h3.port1
HEX3[5] << hex15:h3.port1
HEX3[6] << hex15:h3.port1
HEX4[0] << hex15:h4.y[0]
HEX4[1] << hex15:h4.y[1]
HEX4[2] << hex15:h4.y[2]
HEX4[3] << hex15:h4.y[3]
HEX4[4] << hex15:h4.y[4]
HEX4[5] << hex15:h4.y[5]
HEX4[6] << hex15:h4.y[6]
HEX5[0] << hex15:h5.y[0]
HEX5[1] << hex15:h5.y[1]
HEX5[2] << hex15:h5.y[2]
HEX5[3] << hex15:h5.y[3]
HEX5[4] << hex15:h5.y[4]
HEX5[5] << hex15:h5.y[5]
HEX5[6] << hex15:h5.y[6]
PS2_CLK2 <> <UNC>
PS2_DAT2 <> <UNC>


|PS2_keyboard|keyboard:keyboard1
clk => fifo.we_a.CLK
clk => fifo.waddr_a[2].CLK
clk => fifo.waddr_a[1].CLK
clk => fifo.waddr_a[0].CLK
clk => fifo.data_a[7].CLK
clk => fifo.data_a[6].CLK
clk => fifo.data_a[5].CLK
clk => fifo.data_a[4].CLK
clk => fifo.data_a[3].CLK
clk => fifo.data_a[2].CLK
clk => fifo.data_a[1].CLK
clk => fifo.data_a[0].CLK
clk => buffer[0].CLK
clk => buffer[1].CLK
clk => buffer[2].CLK
clk => buffer[3].CLK
clk => buffer[4].CLK
clk => buffer[5].CLK
clk => buffer[6].CLK
clk => buffer[7].CLK
clk => buffer[8].CLK
clk => buffer[9].CLK
clk => ready~reg0.CLK
clk => overflow~reg0.CLK
clk => r_ptr[0].CLK
clk => r_ptr[1].CLK
clk => r_ptr[2].CLK
clk => w_ptr[0].CLK
clk => w_ptr[1].CLK
clk => w_ptr[2].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => ps2_clk_sync[0].CLK
clk => ps2_clk_sync[1].CLK
clk => ps2_clk_sync[2].CLK
clk => fifo.CLK0
clrn => count.OUTPUTSELECT
clrn => count.OUTPUTSELECT
clrn => count.OUTPUTSELECT
clrn => count.OUTPUTSELECT
clrn => w_ptr.OUTPUTSELECT
clrn => w_ptr.OUTPUTSELECT
clrn => w_ptr.OUTPUTSELECT
clrn => r_ptr.OUTPUTSELECT
clrn => r_ptr.OUTPUTSELECT
clrn => r_ptr.OUTPUTSELECT
clrn => overflow.OUTPUTSELECT
clrn => ready.OUTPUTSELECT
clrn => fifo.OUTPUTSELECT
clrn => buffer[0].ENA
clrn => buffer[1].ENA
clrn => buffer[2].ENA
clrn => buffer[3].ENA
clrn => buffer[4].ENA
clrn => buffer[5].ENA
clrn => buffer[6].ENA
clrn => buffer[7].ENA
clrn => buffer[8].ENA
clrn => buffer[9].ENA
ps2_clk => ps2_clk_sync[0].DATAIN
ps2_data => always1.IN1
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
ps2_data => buffer.DATAB
data[0] <= fifo.DATAOUT
data[1] <= fifo.DATAOUT1
data[2] <= fifo.DATAOUT2
data[3] <= fifo.DATAOUT3
data[4] <= fifo.DATAOUT4
data[5] <= fifo.DATAOUT5
data[6] <= fifo.DATAOUT6
data[7] <= fifo.DATAOUT7
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
nextdata_n => r_ptr.OUTPUTSELECT
nextdata_n => r_ptr.OUTPUTSELECT
nextdata_n => r_ptr.OUTPUTSELECT
nextdata_n => ready.OUTPUTSELECT
overflow <= overflow~reg0.DB_MAX_OUTPUT_PORT_TYPE


|PS2_keyboard|kbdecoder:decode1
datain[0] => asc.RADDR
datain[0] => ascii_shift.RADDR
datain[0] => ascii_caps.RADDR
datain[1] => asc.RADDR1
datain[1] => ascii_shift.RADDR1
datain[1] => ascii_caps.RADDR1
datain[2] => asc.RADDR2
datain[2] => ascii_shift.RADDR2
datain[2] => ascii_caps.RADDR2
datain[3] => asc.RADDR3
datain[3] => ascii_shift.RADDR3
datain[3] => ascii_caps.RADDR3
datain[4] => asc.RADDR4
datain[4] => ascii_shift.RADDR4
datain[4] => ascii_caps.RADDR4
datain[5] => asc.RADDR5
datain[5] => ascii_shift.RADDR5
datain[5] => ascii_caps.RADDR5
datain[6] => asc.RADDR6
datain[6] => ascii_shift.RADDR6
datain[6] => ascii_caps.RADDR6
datain[7] => asc.RADDR7
datain[7] => ascii_shift.RADDR7
datain[7] => ascii_caps.RADDR7
dataout[0] <= dataout.DB_MAX_OUTPUT_PORT_TYPE
dataout[1] <= dataout.DB_MAX_OUTPUT_PORT_TYPE
dataout[2] <= dataout.DB_MAX_OUTPUT_PORT_TYPE
dataout[3] <= dataout.DB_MAX_OUTPUT_PORT_TYPE
dataout[4] <= dataout.DB_MAX_OUTPUT_PORT_TYPE
dataout[5] <= dataout.DB_MAX_OUTPUT_PORT_TYPE
dataout[6] <= dataout.DB_MAX_OUTPUT_PORT_TYPE
dataout[7] <= dataout.DB_MAX_OUTPUT_PORT_TYPE
shift_state => always0.IN0
shift_state => always0.IN0
caps_state => always0.IN1
caps_state => always0.IN1
ctrl_state => ~NO_FANOUT~


|PS2_keyboard|hex15:h0
x[0] => Decoder0.IN3
x[1] => Decoder0.IN2
x[2] => Decoder0.IN1
x[3] => Decoder0.IN0
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT


|PS2_keyboard|hex15:h1
x[0] => Decoder0.IN3
x[1] => Decoder0.IN2
x[2] => Decoder0.IN1
x[3] => Decoder0.IN0
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT


|PS2_keyboard|hex15:h2
x[0] => Decoder0.IN3
x[1] => Decoder0.IN2
x[2] => Decoder0.IN1
x[3] => Decoder0.IN0
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT


|PS2_keyboard|hex15:h3
x[0] => Decoder0.IN3
x[1] => Decoder0.IN2
x[2] => Decoder0.IN1
x[3] => Decoder0.IN0
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT


|PS2_keyboard|hex15:h4
x[0] => Decoder0.IN3
x[1] => Decoder0.IN2
x[2] => Decoder0.IN1
x[3] => Decoder0.IN0
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT


|PS2_keyboard|hex15:h5
x[0] => Decoder0.IN3
x[1] => Decoder0.IN2
x[2] => Decoder0.IN1
x[3] => Decoder0.IN0
y[0] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[1] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[2] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[3] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[4] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[5] <= y.DB_MAX_OUTPUT_PORT_TYPE
y[6] <= y.DB_MAX_OUTPUT_PORT_TYPE
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT
en => y.OUTPUTSELECT


