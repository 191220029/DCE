
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module exp07(

	//////////// CLOCK //////////
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// Seg7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5
);



//=======================================================
//  REG/WIRE declarations
//=======================================================
wire [7:0]dout0, dout1, dout2;

//=======================================================
//  Structural coding
//=======================================================

/*
initial begin
	dout0 = 0;
	dout1 = 0;
	dout2 = 0;
end
*/

//clock_1(CLOCK_50, LEDR[9]);

//v_rams_8 expRAM(LEDR[9], KEY[3], SW[9:8], KEY[2:0], SW[7:0], dout0, dout1, dout2);

/*
RAM1 r1(LEDR[9], KEY[0], SW[9:6], SW[5:2], SW[1:0], dout0);

RAM2 r2(
	.clock(LEDR[9]),
	.data(SW[1:0]),
	.rdaddress(SW[5:2]),
	.wraddress(SW[9:6]),
	.wren(KEY[0]),
	.q(dout1)
);
*/
RAM1 r1(CLOCK_50, KEY[0], SW[9:6], SW[5:2], SW[1:0], dout0);

RAM2 r2(
	.clock(CLOCK_50),
	.data(SW[1:0]),
	.rdaddress(SW[5:2]),
	.wraddress(SW[9:6]),
	.wren(KEY[0]),
	.q(dout1)
);
hex15 hex0(dout0[3:0], HEX0);
hex15 hex1(dout0[7:4], HEX1);
hex15 hex2(dout1[3:0], HEX2);
hex15 hex3(dout1[7:4], HEX3);
hex15 hex4(dout2[3:0], HEX4);
hex15 hex5(dout2[7:4], HEX5);

endmodule
